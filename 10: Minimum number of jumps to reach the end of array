https://leetcode.com/problems/jump-game-ii/

let jump = (A, seen = new Set([0]), i = 1, reach = 1, hops = 0) => {
    let N = A.length;
    let q = [A[0]];
    while (i < N) {
        let K = q.length;
        while (K--) {
            let next = q[0]; q.shift();
            for (reach = Math.max(reach, next); i <= Math.min(reach, N - 1); ++i) {
                if (seen.has(i))
                    continue;
                q.push(i + A[i]);
                seen.add(i);
            }
        }
        ++hops;
    }
    return hops;
};

//OR

let jump = A => {
    let N = A.length, hops = 0, reach = A[0], next = -1;
    for (let i = 1; i < N; ++hops, reach = next)
        for (next = reach; i <= Math.min(reach, N - 1); ++i)
            next = Math.max(next, i + A[i]);
    return hops;
};
